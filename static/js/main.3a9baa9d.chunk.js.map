{"version":3,"sources":["components/Story.js","components/NewsFeed.js","components/Comment.js","components/Article.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","Story","props","goToArticle","event","contentID","state","storyData","url","this","get","then","res","data","console","log","setState","catch","err","commentField","kids","className","onClick","descendants","title","href","score","by","React","Component","NewsFeed","_isMounted","changePage","_maxStories","contentArr","length","_proposedStories","pageNumber","target","cached","feedType","undefined","Date","now","timestamp","stories","slice","map","elem","Comment","_dateStr","retrieveKids","commentID","commentData","comments","time","parseInt","toString","style","margin","dangerouslySetInnerHTML","__html","text","Article","returnComments","i","key","Navigation","changeFeed","App","browseType","isNewsFeed","localStorage","setItem","currID","getItem","mainContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3a9baa9d.chunk.js","sourcesContent":["import React from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nclass Story extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      storyData: {},\r\n      contentID: this.props.contentID\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let url =\r\n      \"https://hacker-news.firebaseio.com/v0/item/\" +\r\n      this.props.contentID +\r\n      \".json\";\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        const storyData = res.data;\r\n        console.log(this.props.contentID);\r\n\r\n        this.setState({\r\n          storyData: storyData,\r\n          contentID: this.props.contentID\r\n        });\r\n      })\r\n      .catch(err => console.log(this.props.contentID, err));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.contentID !== this.props.contentID) {\r\n      let url =\r\n        \"https://hacker-news.firebaseio.com/v0/item/\" +\r\n        this.props.contentID +\r\n        \".json\";\r\n      axios\r\n        .get(url)\r\n        .then(res => {\r\n          const storyData = res.data;\r\n          this.setState({\r\n            storyData: storyData,\r\n            contentID: this.props.contentID\r\n          });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }\r\n  render() {\r\n    let commentField =\r\n      this.state.storyData && this.state.storyData.kids ? (\r\n        <span className=\"comment-link\" onClick={this.goToArticle}>\r\n          {this.state.storyData.descendants} comments\r\n        </span>\r\n      ) : (\r\n        <span>0 comments</span>\r\n      );\r\n    let title =\r\n      this.state.storyData && this.state.storyData.url ? (\r\n        <a className=\"story-title\" href={this.state.storyData.url}>\r\n          {this.state.storyData.title}\r\n        </a>\r\n      ) : (\r\n        <p className=\"story-title\" onClick={this.goToArticle}>\r\n          {this.state.storyData && this.state.storyData.title}\r\n        </p>\r\n      );\r\n    return (\r\n      <div>\r\n        {this.state.storyData && (\r\n          <div className=\"story\">\r\n            {title}\r\n            <p className=\"story-features\">\r\n              {this.state.storyData.score}pts by {this.state.storyData.by}{\" \"}\r\n              {commentField}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  goToArticle = event => {\r\n    this.props.goToArticle(event, this.props.contentID);\r\n  };\r\n}\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Story from \"./Story\";\r\nconst axios = require(\"axios\");\r\n\r\nclass NewsFeed extends React.Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.cached = {};\r\n    this.state = {\r\n      contentArr: [],\r\n      pageNumber: 0,\r\n      feedType: \"best\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    let url =\r\n      \"https://hacker-news.firebaseio.com/v0/\" +\r\n      this.props.feedType +\r\n      \"stories.json\";\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          const contentArr = res.data;\r\n          this.setState({ contentArr });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  componentDidUpdate() {\r\n    if (\r\n      this.cached[this.props.feedType] === undefined ||\r\n      Date.now() - this.cached[this.props.feedType].timestamp > 100000 ||\r\n      this.state.feedType !== this.props.feedType\r\n    ) {\r\n      let url =\r\n        \"https://hacker-news.firebaseio.com/v0/\" +\r\n        this.props.feedType +\r\n        \"stories.json\";\r\n      axios.get(url).then(res => {\r\n        if (this._isMounted) {\r\n          const contentArr = res.data;\r\n          this.setState({\r\n            contentArr: contentArr,\r\n            feedType: this.props.feedType\r\n          });\r\n        }\r\n      });\r\n      this.cached[this.props.feedType] = {\r\n        timestamp: Date.now()\r\n      };\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    let pageNumber = this.state.pageNumber;\r\n    console.log(this.state.contentArr);\r\n\r\n    let stories = this.state.contentArr\r\n      .slice(pageNumber * 50, (pageNumber + 1) * 50)\r\n      .map(elem => (\r\n        <Story contentID={elem} goToArticle={this.props.goToArticle} />\r\n      ));\r\n    return (\r\n      <main>\r\n        <div className=\"stories-container\">{stories}</div>\r\n        <div className=\"page-nav\">\r\n          <div className=\"prev-page\" onClick={this.changePage}>\r\n            {\"<prev\"}\r\n          </div>\r\n          <div className=\"next-page\" onClick={this.changePage}>\r\n            {\"next>\"}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n  changePage = event => {\r\n    let _maxStories = this.state.contentArr.length;\r\n    let _proposedStories = (this.state.pageNumber + 2) * 50;\r\n    if (\r\n      event.target.className === \"next-page\" &&\r\n      _maxStories > _proposedStories\r\n    ) {\r\n      this.setState(state => ({\r\n        pageNumber: state.pageNumber + 1\r\n      }));\r\n    } else if (\r\n      event.target.className === \"prev-page\" &&\r\n      this.state.pageNumber > 0\r\n    ) {\r\n      this.setState(state => ({\r\n        pageNumber: state.pageNumber - 1\r\n      }));\r\n    }\r\n  };\r\n}\r\n\r\nexport default NewsFeed;\r\n","import React from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nclass Comment extends React.Component {\r\n  _isMounted = false;\r\n  _dateStr = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commentData: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    let url =\r\n      \"https://hacker-news.firebaseio.com/v0/item/\" +\r\n      this.props.commentID +\r\n      \".json\";\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          const commentData = res.data;\r\n          this.setState({\r\n            commentData\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    let comments = this.state.commentData.kids ? (\r\n      this.retrieveKids(this.state.commentData.kids)\r\n    ) : (\r\n      <div></div>\r\n    );\r\n    if (this.state.commentData) {\r\n      let time = parseInt(Date.now() / 1000) - this.state.commentData.time;\r\n      if (time < 60) this._dateStr = time.toString + \" seconds\";\r\n      else if (time > 60 && time < 3600)\r\n        this._dateStr = parseInt(time / 60) + \" minutes\";\r\n      else if (time > 3600) this._dateStr = parseInt(time / 3600) + \" hours\";\r\n    }\r\n\r\n    console.log();\r\n    return (\r\n      <div style={{ margin: \"1.5rem\" }}>\r\n        <p className=\"comment-info\">\r\n          {this.state.commentData.by} posted {this._dateStr} ago\r\n        </p>\r\n        <p\r\n          className=\"comment\"\r\n          dangerouslySetInnerHTML={{ __html: this.state.commentData.text }}\r\n        ></p>\r\n        {comments}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  retrieveKids = kids => {\r\n    const comments = kids.map(elem => {\r\n      return <Comment commentID={elem} />;\r\n    });\r\n    return comments;\r\n  };\r\n}\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport Story from \"./Story\";\r\nconst axios = require(\"axios\");\r\n\r\nclass Article extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      storyData: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let url =\r\n      \"https://hacker-news.firebaseio.com/v0/item/\" +\r\n      this.props.contentID +\r\n      \".json\";\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        const storyData = res.data;\r\n        this.setState({ storyData });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const comments = this.state.storyData ? (\r\n      this.returnComments(this.state.storyData.kids)\r\n    ) : (\r\n      <div></div>\r\n    );\r\n    console.log(this.props.contentID);\r\n\r\n    return (\r\n      <main>\r\n        <Story contentID={this.props.contentID} />\r\n        <div className=\"article-comments\">{comments}</div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  returnComments = kids => {\r\n    if (!kids) {\r\n      return;\r\n    } else {\r\n      this.commentData = {};\r\n      let comments = kids.map((elem, i) => {\r\n        let comment = (\r\n          <div key={i}>\r\n            <Comment commentID={elem} />\r\n          </div>\r\n        );\r\n        return comment;\r\n      });\r\n      return comments;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Article;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport Article from \"./components/Article\";\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <nav>\n        <div className=\"new\" onClick={this.changeFeed}>\n          new\n        </div>\n        <div className=\"top\" onClick={this.changeFeed}>\n          top\n        </div>\n        <div className=\"ask\" onClick={this.changeFeed}>\n          ask\n        </div>\n        <div className=\"show\" onClick={this.changeFeed}>\n          show\n        </div>\n        <div className=\"job\" onClick={this.changeFeed}>\n          jobs\n        </div>\n      </nav>\n    );\n  }\n  changeFeed = event => {\n    this.props.changeFeed(event);\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      browseType: \"best\",\n      isNewsFeed: true,\n      currID: 0\n    };\n  }\n\n  componentDidMount() {\n    const browseType = localStorage.getItem(\"browseType\");\n    const isNewsFeed = localStorage.getItem(\"isNewsFeed\") == \"true\";\n    const currID = parseInt(localStorage.getItem(\"currID\"));\n\n    console.log(currID);\n    if (browseType !== null) {\n      this.setState({ browseType });\n    } else {\n      localStorage.setItem(\"browseType\", \"best\");\n    }\n\n    if (isNewsFeed !== null) {\n      this.setState({ isNewsFeed });\n    } else {\n      localStorage.setItem(\"isNewsFeed\", true);\n    }\n\n    if (currID !== null) {\n      console.log(currID);\n      this.setState({ currID });\n    } else {\n      localStorage.setItem(\"currID\", 0);\n      localStorage.setItem(\"isNewsFeed\", true);\n    }\n  }\n\n  render() {\n    let mainContent = this.state.isNewsFeed ? (\n      <NewsFeed\n        feedType={this.state.browseType}\n        goToArticle={this.goToArticle}\n      />\n    ) : (\n      <Article contentID={this.state.currID} />\n    );\n    return (\n      <div className=\"App\">\n        <header className=\"best\" onClick={this.changeFeed}>\n          HN Clone\n        </header>\n        <Navigation changeFeed={this.changeFeed} />\n        <hr />\n        {mainContent}\n      </div>\n    );\n  }\n\n  changeFeed = event => {\n    this.setState({\n      browseType: event.target.className,\n      isNewsFeed: true\n    });\n\n    localStorage.setItem(\"browseType\", event.target.className);\n    localStorage.setItem(\"isNewsFeed\", true);\n    localStorage.setItem(\"currID\", 0);\n  };\n\n  goToArticle = (event, currID) => {\n    this.setState({\n      isNewsFeed: false,\n      currID: currID\n    });\n\n    localStorage.setItem(\"isNewsFeed\", false);\n    localStorage.setItem(\"currID\", currID);\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}